name: CD Workflow Master
on:
  push:
    branches:
      - main
      - master

jobs:
  setup:
    name: âš™ install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache venv virtual enviorment
        uses: actions/cache@v2
        id: venv-cache
        env:
          cache-name: cache-venv-modules
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependenciesn
        if: steps.venv-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          make install
  #  tests:
  #    name: ðŸ§ª tests
  #    needs: [ setup ]
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v2
  #      - name: Resore node modules Cache
  #        uses: actions/cache@v2
  #        with:
  #          path: venv
  #          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
  #      - run: make tests

  deploy:
    name: ðŸš€ Deploy to App Engine
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v0.2.0
        with:
          deliverables: app.yaml
          project_id: ${{ secrets.PROJECT_RECIPES_GCP_ID }}
          credentials: ${{ secrets.PROJECT_RECIPES_GCP_KEY }}
          promote: false
          version: v1
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}